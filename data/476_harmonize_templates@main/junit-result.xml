<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="ael01_nollt" timestamp="2023-05-16T08:31:04Z" hostname="3670ef3e2e6a" tests="8" skipped="0" failures="0" errors="4" time="1.414">
    <testcase time="1.014" classname="ael01_nollt" name="ael01_nollt_works_with_admh_dataset"/>
    <testcase time="0.11" classname="ael01_nollt" name="ael01_nollt_works_with_admh_dataset">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-ael01_nollt.R:7:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: non-null colwidths argument must have length ncol(tt) + 1 [4], got length 3
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.0489999999999999" classname="ael01_nollt" name="ael01_nollt_works_with_non_default_label"/>
    <testcase time="0.081" classname="ael01_nollt" name="ael01_nollt_works_with_non_default_label">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-ael01_nollt.R:19:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: non-null colwidths argument must have length ncol(tt) + 1 [4], got length 3
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.0610000000000004" classname="ael01_nollt" name="ael01_nollt_can_handle_all_missing_values"/>
    <testcase time="0.0219999999999998" classname="ael01_nollt" name="ael01_nollt_can_handle_all_missing_values">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-ael01_nollt.R:32:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: non-null colwidths argument must have length ncol(tt) + 1 [4], got length 3
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.0390000000000001" classname="ael01_nollt" name="ael01_nollt_can_handle_some_missing_values"/>
    <testcase time="0.0380000000000003" classname="ael01_nollt" name="ael01_nollt_can_handle_some_missing_values">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-ael01_nollt.R:47:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: non-null colwidths argument must have length ncol(tt) + 1 [4], got length 3
Class:   simpleError/error/condition</error>
    </testcase>
  </testsuite>
  <testsuite name="aet01" timestamp="2023-05-16T08:31:06Z" hostname="3670ef3e2e6a" tests="9" skipped="4" failures="0" errors="0" time="2.59">
    <testcase time="0.500999999999999" classname="aet01" name="aet01_can_handle_all_NA_values"/>
    <testcase time="0.307" classname="aet01" name="aet01_can_handle_all_NA_values">
      <skipped message="Reason: On CRAN ('test-aet01.R:12:3')"/>
    </testcase>
    <testcase time="0.343" classname="aet01" name="aet01_can_handle_some_NA_values"/>
    <testcase time="0.316" classname="aet01" name="aet01_can_handle_some_NA_values">
      <skipped message="Reason: On CRAN ('test-aet01.R:29:3')"/>
    </testcase>
    <testcase time="0.233" classname="aet01" name="aet01_can_use_custom_anl_vars"/>
    <testcase time="0.155" classname="aet01" name="aet01_can_use_custom_anl_vars">
      <skipped message="Reason: On CRAN ('test-aet01.R:35:3')"/>
    </testcase>
    <testcase time="0.103" classname="aet01" name="aet01_fails_on_incomplete_data_input"/>
    <testcase time="0.336" classname="aet01" name="aet01_can_use_custom_medconcept_var"/>
    <testcase time="0.296" classname="aet01" name="aet01_can_use_custom_medconcept_var">
      <skipped message="Reason: On CRAN ('test-aet01.R:65:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="aet01_aesi" timestamp="2023-05-16T08:31:08Z" hostname="3670ef3e2e6a" tests="7" skipped="3" failures="0" errors="0" time="2.772">
    <testcase time="0.357" classname="aet01_aesi" name="aet01_aesi_can_handle_all_NA_values"/>
    <testcase time="0.504" classname="aet01_aesi" name="aet01_aesi_can_handle_all_NA_values">
      <skipped message="Reason: On CRAN ('test-aet01_aesi.R:17:3')"/>
    </testcase>
    <testcase time="0.251" classname="aet01_aesi" name="aet01_aesi_can_handle_some_NA_values"/>
    <testcase time="0.491" classname="aet01_aesi" name="aet01_aesi_can_handle_some_NA_values">
      <skipped message="Reason: On CRAN ('test-aet01_aesi.R:30:3')"/>
    </testcase>
    <testcase time="0.337000000000002" classname="aet01_aesi" name="aet01_aesi_works_with_ALL_argument"/>
    <testcase time="0.757" classname="aet01_aesi" name="aet01_aesi_works_with_ALL_argument">
      <skipped message="Reason: On CRAN ('test-aet01_aesi.R:36:3')"/>
    </testcase>
    <testcase time="0.0749999999999993" classname="aet01_aesi" name="aet01_aesi_check_fails_on_incomplete_data_input"/>
  </testsuite>
  <testsuite name="aet02" timestamp="2023-05-16T08:31:11Z" hostname="3670ef3e2e6a" tests="3" skipped="1" failures="0" errors="0" time="1.955">
    <testcase time="0.0810000000000013" classname="aet02" name="aet02_fails_on_incomplete_data_input"/>
    <testcase time="0.106" classname="aet02" name="aet02_handle_empty_data_input"/>
    <testcase time="1.768" classname="aet02" name="aet02_can_have_different_levels_of_row_split">
      <skipped message="Reason: On CRAN ('test-aet02.R:30:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="aet03" timestamp="2023-05-16T08:31:13Z" hostname="3670ef3e2e6a" tests="4" skipped="2" failures="0" errors="0" time="3.367">
    <testcase time="0.390000000000001" classname="aet03" name="aet03_can_handle_NA_values"/>
    <testcase time="0.250999999999999" classname="aet03" name="aet03_can_handle_NA_values">
      <skipped message="Reason: On CRAN ('test-aet03.R:10:3')"/>
    </testcase>
    <testcase time="2.008" classname="aet03" name="aet03_can_handle_some_NA_values"/>
    <testcase time="0.718" classname="aet03" name="aet03_can_handle_some_NA_values">
      <skipped message="Reason: On CRAN ('test-aet03.R:27:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="aet04" timestamp="2023-05-16T08:31:16Z" hostname="3670ef3e2e6a" tests="4" skipped="2" failures="0" errors="0" time="4.991">
    <testcase time="0.564" classname="aet04" name="aet04_can_handle_NA_values"/>
    <testcase time="0.394" classname="aet04" name="aet04_can_handle_NA_values">
      <skipped message="Reason: On CRAN ('test-aet04.R:10:3')"/>
    </testcase>
    <testcase time="2.848" classname="aet04" name="aet04_can_handle_some_NA_values"/>
    <testcase time="1.185" classname="aet04" name="aet04_can_handle_some_NA_values">
      <skipped message="Reason: On CRAN ('test-aet04.R:32:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="aet10" timestamp="2023-05-16T08:31:21Z" hostname="3670ef3e2e6a" tests="4" skipped="2" failures="0" errors="0" time="0.512">
    <testcase time="0.0820000000000007" classname="aet10" name="aet10_can_handle_NA_values"/>
    <testcase time="0.119" classname="aet10" name="aet10_can_handle_NA_values">
      <skipped message="Reason: On CRAN ('test-aet10.R:10:3')"/>
    </testcase>
    <testcase time="0.106999999999999" classname="aet10" name="aet10_can_handle_some_NA_values"/>
    <testcase time="0.204000000000001" classname="aet10" name="aet10_can_handle_some_NA_values">
      <skipped message="Reason: On CRAN ('test-aet10.R:24:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="assertions" timestamp="2023-05-16T08:31:22Z" hostname="3670ef3e2e6a" tests="14" skipped="0" failures="0" errors="0" time="0.091">
    <testcase time="0.0180000000000007" classname="assertions" name="assert_colnames_works_as_expected"/>
    <testcase time="0.00799999999999912" classname="assertions" name="assert_colnames_works_as_expected"/>
    <testcase time="0.00199999999999889" classname="assertions" name="assert_colnames_works_as_expected"/>
    <testcase time="0.00500000000000256" classname="assertions" name="assert_colnames_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="assertions" name="assert_one_tablenames_works_as_expected"/>
    <testcase time="0.00199999999999889" classname="assertions" name="assert_one_tablenames_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="assertions" name="assert_one_tablenames_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="assertions" name="assert_one_tablenames_works_as_expected"/>
    <testcase time="0.00500000000000256" classname="assertions" name="assert_all_tablenames_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="assertions" name="assert_all_tablenames_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="assertions" name="assert_all_tablenames_works_as_expected"/>
    <testcase time="0.0109999999999992" classname="assertions" name="assert_args_works_as_expected"/>
    <testcase time="0.00199999999999889" classname="assertions" name="assert_args_works_as_expected"/>
    <testcase time="0.0110000000000028" classname="assertions" name="assert_args_works_as_expected"/>
  </testsuite>
  <testsuite name="checks" timestamp="2023-05-16T08:31:22Z" hostname="3670ef3e2e6a" tests="8" skipped="0" failures="0" errors="0" time="0.032">
    <testcase time="0.00799999999999912" classname="checks" name="check_all_colnames_works_as_expected"/>
    <testcase time="0.00400000000000134" classname="checks" name="check_all_colnames_works_as_expected"/>
    <testcase time="0.00199999999999889" classname="checks" name="check_all_colnames_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="checks" name="check_all_colnames_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="checks" name="check_one_colnames_works_as_expected"/>
    <testcase time="0.00400000000000134" classname="checks" name="check_one_colnames_works_as_expected"/>
    <testcase time="0.00199999999999889" classname="checks" name="check_one_colnames_works_as_expected"/>
    <testcase time="0.00400000000000134" classname="checks" name="check_one_colnames_works_as_expected"/>
  </testsuite>
  <testsuite name="chevron_tlg-class" timestamp="2023-05-16T08:31:22Z" hostname="3670ef3e2e6a" tests="24" skipped="0" failures="0" errors="0" time="0.093">
    <testcase time="0.00900000000000034" classname="chevron_tlg_class" name="chevron_t_object_can_be_constructed_with_default_values"/>
    <testcase time="0.00499999999999901" classname="chevron_tlg_class" name="chevron_t_object_can_be_constructed_with_default_values"/>
    <testcase time="0.00499999999999901" classname="chevron_tlg_class" name="chevron_t_object_can_be_constructed_with_custom_values"/>
    <testcase time="0.00499999999999901" classname="chevron_tlg_class" name="chevron_t_object_can_be_constructed_with_custom_values"/>
    <testcase time="0.00300000000000011" classname="chevron_tlg_class" name="chevron_t_object_can_be_constructed_with_custom_values"/>
    <testcase time="0.00400000000000134" classname="chevron_tlg_class" name="chevron_t_object_can_be_constructed_with_custom_values"/>
    <testcase time="0.00600000000000023" classname="chevron_tlg_class" name="chevron_t_constructor_returns_an_error_when_expected"/>
    <testcase time="0.00100000000000122" classname="chevron_tlg_class" name="chevron_t_constructor_returns_an_error_when_expected"/>
    <testcase time="0.000999999999997669" classname="chevron_tlg_class" name="chevron_t_constructor_returns_an_error_when_expected"/>
    <testcase time="0.00100000000000122" classname="chevron_tlg_class" name="chevron_t_constructor_returns_an_error_when_expected"/>
    <testcase time="0.00100000000000122" classname="chevron_tlg_class" name="chevron_t_constructor_returns_an_error_when_expected"/>
    <testcase time="0.00199999999999889" classname="chevron_tlg_class" name="chevron_t_constructor_returns_an_error_when_expected"/>
    <testcase time="0.00600000000000023" classname="chevron_tlg_class" name="chevron_l_object_can_be_constructed_with_default_values"/>
    <testcase time="0.00399999999999778" classname="chevron_tlg_class" name="chevron_l_object_can_be_constructed_with_default_values"/>
    <testcase time="0.00700000000000145" classname="chevron_tlg_class" name="chevron_g_object_can_be_constructed_with_custom_values"/>
    <testcase time="0.00400000000000134" classname="chevron_tlg_class" name="chevron_g_object_can_be_constructed_with_custom_values"/>
    <testcase time="0.00300000000000011" classname="chevron_tlg_class" name="chevron_g_object_can_be_constructed_with_custom_values"/>
    <testcase time="0.0129999999999981" classname="chevron_tlg_class" name="chevron_g_object_can_be_constructed_with_custom_values"/>
    <testcase time="0.00700000000000145" classname="chevron_tlg_class" name="chevron_g_constructor_returns_an_error_when_expected"/>
    <testcase time="0.00199999999999889" classname="chevron_tlg_class" name="chevron_g_constructor_returns_an_error_when_expected"/>
    <testcase time="0.00100000000000122" classname="chevron_tlg_class" name="chevron_g_constructor_returns_an_error_when_expected"/>
    <testcase time="0.000999999999997669" classname="chevron_tlg_class" name="chevron_g_constructor_returns_an_error_when_expected"/>
    <testcase time="0.00100000000000122" classname="chevron_tlg_class" name="chevron_g_constructor_returns_an_error_when_expected"/>
    <testcase time="0.000999999999997669" classname="chevron_tlg_class" name="chevron_g_constructor_returns_an_error_when_expected"/>
  </testsuite>
  <testsuite name="chevron_tlg-methods" timestamp="2023-05-16T08:31:22Z" hostname="3670ef3e2e6a" tests="43" skipped="3" failures="0" errors="0" time="4.709">
    <testcase time="3.74" classname="chevron_tlg_methods" name="run_works_as_expected_for_chevron_t_object">
      <skipped message="Reason: On CRAN ('test-chevron_tlg-methods.R:5:3')"/>
    </testcase>
    <testcase time="0.721999999999998" classname="chevron_tlg_methods" name="run_works_as_expected_for_chevron_t_object_when_auto_pre_FALSE">
      <skipped message="Reason: On CRAN ('test-chevron_tlg-methods.R:13:3')"/>
    </testcase>
    <testcase time="0.0140000000000029" classname="chevron_tlg_methods" name="args_ls_works_as_expected"/>
    <testcase time="0.00199999999999889" classname="chevron_tlg_methods" name="args_ls_works_as_expected"/>
    <testcase time="0.00100000000000122" classname="chevron_tlg_methods" name="args_ls_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="chevron_tlg_methods" name="args_ls_works_as_expected_when_simplify_is_TRUE"/>
    <testcase time="0.000999999999997669" classname="chevron_tlg_methods" name="args_ls_works_as_expected_when_simplify_is_TRUE"/>
    <testcase time="0.00100000000000122" classname="chevron_tlg_methods" name="args_ls_works_as_expected_when_simplify_is_TRUE"/>
    <testcase time="0.00600000000000023" classname="chevron_tlg_methods" name="args_ls_works_as_expected_with_custom_chevron_tlg_object"/>
    <testcase time="0.000999999999997669" classname="chevron_tlg_methods" name="args_ls_works_as_expected_with_custom_chevron_tlg_object"/>
    <testcase time="0.00100000000000122" classname="chevron_tlg_methods" name="args_ls_works_as_expected_with_custom_chevron_tlg_object"/>
    <testcase time="0.00400000000000134" classname="chevron_tlg_methods" name="args_ls_works_as_expected_with_custom_chevron_tlg_object"/>
    <testcase time="0.00799999999999912" classname="chevron_tlg_methods" name="main_works_as_expected"/>
    <testcase time="0.0100000000000016" classname="chevron_tlg_methods" name="get_main_works_as_expected"/>
    <testcase time="0.00399999999999778" classname="chevron_tlg_methods" name="get_main_works_as_expected"/>
    <testcase time="0.00700000000000145" classname="chevron_tlg_methods" name="main_setter_works_as_expected"/>
    <testcase time="0.0129999999999981" classname="chevron_tlg_methods" name="main_setter_throw_an_error_as_expected"/>
    <testcase time="0.00700000000000145" classname="chevron_tlg_methods" name="preprocess_works_as_expected"/>
    <testcase time="0.0169999999999995" classname="chevron_tlg_methods" name="get_preprocess_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="chevron_tlg_methods" name="get_preprocess_works_as_expected"/>
    <testcase time="0.0100000000000016" classname="chevron_tlg_methods" name="preprocess_setter_works_as_expected"/>
    <testcase time="0.0129999999999981" classname="chevron_tlg_methods" name="preprocess_sends_an_error_as_expected"/>
    <testcase time="0.00800000000000267" classname="chevron_tlg_methods" name="postprocess_works_as_expected"/>
    <testcase time="0.00999999999999801" classname="chevron_tlg_methods" name="get_postprocess_works_as_expected"/>
    <testcase time="0.00400000000000134" classname="chevron_tlg_methods" name="get_postprocess_works_as_expected"/>
    <testcase time="0.00799999999999912" classname="chevron_tlg_methods" name="postprocess_setter_works_as_expected"/>
    <testcase time="0.0120000000000005" classname="chevron_tlg_methods" name="postprocess_sends_an_error_as_expected"/>
    <testcase time="0.00700000000000145" classname="chevron_tlg_methods" name="datasets_works_as_expected"/>
    <testcase time="0.00899999999999679" classname="chevron_tlg_methods" name="get_adam_datasets_works_as_expected"/>
    <testcase time="0.00400000000000134" classname="chevron_tlg_methods" name="get_adam_datasets_works_as_expected"/>
    <testcase time="0.00799999999999912" classname="chevron_tlg_methods" name="datasets_setter_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="chevron_tlg_methods" name="script_works_as_expected"/>
    <testcase time="0.00200000000000244" classname="chevron_tlg_methods" name="script_works_as_expected"/>
    <testcase time="0.000999999999997669" classname="chevron_tlg_methods" name="script_works_as_expected"/>
    <testcase time="0.00499999999999901" classname="chevron_tlg_methods" name="script_works_as_expected_with_dictionary_of_arguments"/>
    <testcase time="0.00200000000000244" classname="chevron_tlg_methods" name="script_works_as_expected_with_dictionary_of_arguments"/>
    <testcase time="0.000999999999997669" classname="chevron_tlg_methods" name="script_works_as_expected_with_dictionary_of_arguments"/>
    <testcase time="0.00100000000000122" classname="chevron_tlg_methods" name="script_works_as_expected_with_dictionary_of_arguments"/>
    <testcase time="0.00399999999999778" classname="chevron_tlg_methods" name="script_funs_works_as_expected_in_interactive_mode">
      <skipped message="Reason: !interactive() is TRUE ('test-chevron_tlg-methods.R:194:3')"/>
    </testcase>
    <testcase time="0.0150000000000006" classname="chevron_tlg_methods" name="script_funs_works_as_expected"/>
    <testcase time="0.00100000000000122" classname="chevron_tlg_methods" name="script_funs_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="chevron_tlg_methods" name="script_funs_works_as_expected_with_details_set_to_TRUE"/>
    <testcase time="0.00199999999999889" classname="chevron_tlg_methods" name="script_funs_works_as_expected_with_details_set_to_TRUE"/>
  </testsuite>
  <testsuite name="cmt01a" timestamp="2023-05-16T08:31:27Z" hostname="3670ef3e2e6a" tests="4" skipped="2" failures="0" errors="0" time="1.726">
    <testcase time="0.189" classname="cmt01a" name="cmt01a_can_handle_all_NA_values"/>
    <testcase time="0.149000000000001" classname="cmt01a" name="cmt01a_can_handle_all_NA_values">
      <skipped message="Reason: On CRAN ('test-cmt01a.R:10:3')"/>
    </testcase>
    <testcase time="0.759" classname="cmt01a" name="cmt01a_can_handle_some_NA_values"/>
    <testcase time="0.628999999999998" classname="cmt01a" name="cmt01a_can_handle_some_NA_values">
      <skipped message="Reason: On CRAN ('test-cmt01a.R:18:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="cmt02_pt" timestamp="2023-05-16T08:31:29Z" hostname="3670ef3e2e6a" tests="4" skipped="2" failures="0" errors="0" time="0.653">
    <testcase time="0.134" classname="cmt02_pt" name="cmt02_pt_can_handle_all_NA_values"/>
    <testcase time="0.114000000000001" classname="cmt02_pt" name="cmt02_pt_can_handle_all_NA_values">
      <skipped message="Reason: On CRAN ('test-cmt02_pt.R:9:3')"/>
    </testcase>
    <testcase time="0.178999999999998" classname="cmt02_pt" name="cmt02_pt_can_handle_some_NA_values"/>
    <testcase time="0.226000000000003" classname="cmt02_pt" name="cmt02_pt_can_handle_some_NA_values">
      <skipped message="Reason: On CRAN ('test-cmt02_pt.R:17:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="coxt02" timestamp="2023-05-16T08:31:29Z" hostname="3670ef3e2e6a" tests="3" skipped="1" failures="0" errors="0" time="0.836">
    <testcase time="0.575000000000003" classname="coxt02" name="coxt02_can_handle_some_NA_values"/>
    <testcase time="0.232999999999997" classname="coxt02" name="coxt02_can_handle_some_NA_values">
      <skipped message="Reason: On CRAN ('test-coxt02.R:5:3')"/>
    </testcase>
    <testcase time="0.0280000000000022" classname="coxt02" name="coxt02_fails_on_incomlete_date"/>
  </testsuite>
  <testsuite name="default_tlg" timestamp="2023-05-16T08:31:30Z" hostname="3670ef3e2e6a" tests="13" skipped="12" failures="0" errors="1" time="13.418">
    <testcase time="0.0489999999999995" classname="default_tlg" name="ael01_nollt_function_with_default_argument_value_return_expected_result_with_test_data">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-default_tlg.R:5:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: non-null colwidths argument must have length ncol(tt) + 1 [4], got length 3
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.614999999999998" classname="default_tlg" name="aet01_function_with_default_argument_value_return_expected_result_with_test_data">
      <skipped message="Reason: On CRAN ('test-default_tlg.R:12:3')"/>
    </testcase>
    <testcase time="0.75" classname="default_tlg" name="aet01_aesi_function_with_default_argument_value_return_expected_result_with_test_data">
      <skipped message="Reason: On CRAN ('test-default_tlg.R:19:3')"/>
    </testcase>
    <testcase time="1.131" classname="default_tlg" name="aet02_functions_with_default_argument_value_return_expected_result_with_test_data">
      <skipped message="Reason: On CRAN ('test-default_tlg.R:26:3')"/>
    </testcase>
    <testcase time="2.618" classname="default_tlg" name="aet03_functions_with_default_argument_value_return_expected_result_with_test_data">
      <skipped message="Reason: On CRAN ('test-default_tlg.R:33:3')"/>
    </testcase>
    <testcase time="3.969" classname="default_tlg" name="aet04_functions_with_default_argument_value_return_expected_result_with_test_data">
      <skipped message="Reason: On CRAN ('test-default_tlg.R:40:3')"/>
    </testcase>
    <testcase time="0.32" classname="default_tlg" name="aet10_functions_with_default_argument_value_return_expected_result_with_test_data">
      <skipped message="Reason: On CRAN ('test-default_tlg.R:47:3')"/>
    </testcase>
    <testcase time="1.364" classname="default_tlg" name="cmt01a_1_functions_with_default_argument_value_return_expected_result_with_test_data">
      <skipped message="Reason: On CRAN ('test-default_tlg.R:54:3')"/>
    </testcase>
    <testcase time="0.394999999999996" classname="default_tlg" name="cmt02_pt_functions_with_default_argument_value_return_expected_result_with_test_data">
      <skipped message="Reason: On CRAN ('test-default_tlg.R:61:3')"/>
    </testcase>
    <testcase time="0.788000000000004" classname="default_tlg" name="coxt02_functions_with_default_argument_value_return_expected_result_with_test_data">
      <skipped message="Reason: On CRAN ('test-default_tlg.R:69:3')"/>
    </testcase>
    <testcase time="0.687999999999995" classname="default_tlg" name="dmt01_functions_with_default_argument_value_return_expected_result_with_test_data">
      <skipped message="Reason: On CRAN ('test-default_tlg.R:76:3')"/>
    </testcase>
    <testcase time="0.456000000000003" classname="default_tlg" name="dst01_functions_with_default_argument_value_return_expected_result_with_test_data">
      <skipped message="Reason: On CRAN ('test-default_tlg.R:83:3')"/>
    </testcase>
    <testcase time="0.274999999999999" classname="default_tlg" name="dtht01_functions_with_default_argument_value_return_expected_result_with_test_data">
      <skipped message="Reason: On CRAN ('test-default_tlg.R:90:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="dmt01" timestamp="2023-05-16T08:31:43Z" hostname="3670ef3e2e6a" tests="4" skipped="2" failures="0" errors="0" time="1.3">
    <testcase time="0.258000000000003" classname="dmt01" name="dmt01_can_handle_NA_values"/>
    <testcase time="0.358999999999995" classname="dmt01" name="dmt01_can_handle_NA_values">
      <skipped message="Reason: On CRAN ('test-dmt01.R:8:3')"/>
    </testcase>
    <testcase time="0.267000000000003" classname="dmt01" name="dmt01_can_handle_numeric_NA_values"/>
    <testcase time="0.415999999999997" classname="dmt01" name="dmt01_can_handle_numeric_NA_values">
      <skipped message="Reason: On CRAN ('test-dmt01.R:15:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="dst01" timestamp="2023-05-16T08:31:45Z" hostname="3670ef3e2e6a" tests="13" skipped="6" failures="1" errors="0" time="2.895">
    <testcase time="0.145000000000003" classname="dst01" name="dst01_create_does_not_allow_all_NA_values">
      <failure type="failure" message="`run(dst01, proc_data, detail_vars = list())` did not throw the expected error. ('test-dst01.R:10:3')">`run(dst01, proc_data, detail_vars = list())` did not throw the expected error.</failure>
    </testcase>
    <testcase time="0.357999999999997" classname="dst01" name="dst01_can_handle_all_NA_values_in_DCSREAS"/>
    <testcase time="0.152000000000001" classname="dst01" name="dst01_can_handle_all_NA_values_in_DCSREAS">
      <skipped message="Reason: On CRAN ('test-dst01.R:21:3')"/>
    </testcase>
    <testcase time="0.184000000000005" classname="dst01" name="dst01_can_handle_some_NA_values"/>
    <testcase time="0.236999999999995" classname="dst01" name="dst01_can_handle_some_NA_values">
      <skipped message="Reason: On CRAN ('test-dst01.R:28:3')"/>
    </testcase>
    <testcase time="0.130000000000003" classname="dst01" name="dst01_can_handle_missing_levels_in_status_var"/>
    <testcase time="0.110999999999997" classname="dst01" name="dst01_can_handle_missing_levels_in_status_var">
      <skipped message="Reason: On CRAN ('test-dst01.R:38:3')"/>
    </testcase>
    <testcase time="0.216000000000001" classname="dst01" name="dst01_can_create_variants"/>
    <testcase time="0.264000000000003" classname="dst01" name="dst01_can_create_variants">
      <skipped message="Reason: On CRAN ('test-dst01.R:43:3')"/>
    </testcase>
    <testcase time="0.265000000000001" classname="dst01" name="dst01_can_create_variants"/>
    <testcase time="0.256999999999998" classname="dst01" name="dst01_can_create_variants">
      <skipped message="Reason: On CRAN ('test-dst01.R:48:3')"/>
    </testcase>
    <testcase time="0.286000000000001" classname="dst01" name="dst01_can_create_variants"/>
    <testcase time="0.289999999999999" classname="dst01" name="dst01_can_create_variants">
      <skipped message="Reason: On CRAN ('test-dst01.R:55:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="dtht01" timestamp="2023-05-16T08:31:48Z" hostname="3670ef3e2e6a" tests="5" skipped="3" failures="0" errors="0" time="1.52">
    <testcase time="0.117000000000004" classname="dtht01" name="dtht01_can_handle_all_NA_values"/>
    <testcase time="0.146000000000001" classname="dtht01" name="dtht01_can_handle_all_NA_values">
      <skipped message="Reason: On CRAN ('test-dtht01.R:12:3')"/>
    </testcase>
    <testcase time="0.262999999999998" classname="dtht01" name="dtht01_can_handle_some_NA_values"/>
    <testcase time="0.369" classname="dtht01" name="dtht01_can_handle_some_NA_values">
      <skipped message="Reason: On CRAN ('test-dtht01.R:19:3')"/>
    </testcase>
    <testcase time="0.625" classname="dtht01" name="dtht01_can_be_parametrize_as_expected">
      <skipped message="Reason: On CRAN ('test-dtht01.R:30:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="egt01" timestamp="2023-05-16T08:31:49Z" hostname="3670ef3e2e6a" tests="3" skipped="2" failures="0" errors="0" time="4.576">
    <testcase time="2.898" classname="egt01" name="egt01_functions_with_default_argument_value_return_expected_result_with_test_data">
      <skipped message="Reason: On CRAN ('test-egt01.R:7:3')"/>
    </testcase>
    <testcase time="1.38200000000001" classname="egt01" name="egt01_can_handle_n_0_and_outputs_NE_instead_of_infs_and_NAs"/>
    <testcase time="0.295999999999999" classname="egt01" name="egt01_can_handle_n_0_and_outputs_NE_instead_of_infs_and_NAs">
      <skipped message="Reason: On CRAN ('test-egt01.R:21:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="egt02" timestamp="2023-05-16T08:31:54Z" hostname="3670ef3e2e6a" tests="2" skipped="2" failures="0" errors="0" time="0.774">
    <testcase time="0.406999999999996" classname="egt02" name="egt02_1_functions_with_default_argument_value_return_expected_result_with_test_data">
      <skipped message="Reason: On CRAN ('test-egt02.R:7:3')"/>
    </testcase>
    <testcase time="0.367000000000004" classname="egt02" name="egt02_2_functions_with_default_value_return_expected_result_with_test_data">
      <skipped message="Reason: On CRAN ('test-egt02.R:14:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="egt03" timestamp="2023-05-16T08:31:55Z" hostname="3670ef3e2e6a" tests="5" skipped="2" failures="0" errors="0" time="1.208">
    <testcase time="0.571999999999996" classname="egt03" name="egt03_functions_with_default_argument_value_return_expected_result_with_test_data">
      <skipped message="Reason: On CRAN ('test-egt03.R:7:3')"/>
    </testcase>
    <testcase time="0.0319999999999965" classname="egt03" name="egt03_errors_on_all_NA_values"/>
    <testcase time="0.247" classname="egt03" name="egt03_can_handle_some_NA_values"/>
    <testcase time="0.295000000000002" classname="egt03" name="egt03_can_handle_some_NA_values">
      <skipped message="Reason: On CRAN ('test-egt03.R:28:3')"/>
    </testcase>
    <testcase time="0.0619999999999976" classname="egt03" name="egt03_fails_on_incomplete_data"/>
  </testsuite>
  <testsuite name="egt05_qtcat" timestamp="2023-05-16T08:31:56Z" hostname="3670ef3e2e6a" tests="4" skipped="2" failures="0" errors="0" time="2.657">
    <testcase time="1.312" classname="egt05_qtcat" name="egt05_qtcat_functions_with_default_argument_value_return_expected_result_with_test_data">
      <skipped message="Reason: On CRAN ('test-egt05_qtcat.R:7:3')"/>
    </testcase>
    <testcase time="0.0319999999999965" classname="egt05_qtcat" name="egt05_qtcat_erros_on_all_NA_values"/>
    <testcase time="0.514000000000003" classname="egt05_qtcat" name="egt05_qtcat_can_handle_some_NA_values"/>
    <testcase time="0.798999999999999" classname="egt05_qtcat" name="egt05_qtcat_can_handle_some_NA_values">
      <skipped message="Reason: On CRAN ('test-egt05_qtcat.R:28:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="empty_report" timestamp="2023-05-16T08:31:58Z" hostname="3670ef3e2e6a" tests="19" skipped="0" failures="0" errors="1" time="3.131">
    <testcase time="1.402" classname="empty_report" name="tlg_functions_return_null_reports_when_domain_table_is_empty"/>
    <testcase time="0.298999999999999" classname="empty_report" name="tlg_functions_return_null_reports_when_domain_table_is_empty"/>
    <testcase time="0.229999999999997" classname="empty_report" name="tlg_functions_return_null_reports_when_domain_table_is_empty"/>
    <testcase time="0.111000000000004" classname="empty_report" name="tlg_functions_return_null_reports_when_domain_table_is_empty"/>
    <testcase time="0.097999999999999" classname="empty_report" name="tlg_functions_return_null_reports_when_domain_table_is_empty"/>
    <testcase time="0.0559999999999974" classname="empty_report" name="tlg_functions_return_null_reports_when_domain_table_is_empty"/>
    <testcase time="0.106999999999999" classname="empty_report" name="tlg_functions_return_null_reports_when_domain_table_is_empty"/>
    <testcase time="0.152000000000001" classname="empty_report" name="tlg_functions_return_null_reports_when_domain_table_is_empty"/>
    <testcase time="0.186999999999998" classname="empty_report" name="tlg_functions_return_null_reports_when_domain_table_is_empty"/>
    <testcase time="0.0710000000000051" classname="empty_report" name="tlg_functions_return_null_reports_when_domain_table_is_empty"/>
    <testcase time="0.0839999999999961" classname="empty_report" name="tlg_functions_return_null_reports_when_domain_table_is_empty"/>
    <testcase time="0.0380000000000038" classname="empty_report" name="tlg_functions_return_null_reports_when_domain_table_is_empty"/>
    <testcase time="0.036999999999999" classname="empty_report" name="tlg_functions_return_null_reports_when_domain_table_is_empty"/>
    <testcase time="0.036999999999999" classname="empty_report" name="tlg_functions_return_null_reports_when_domain_table_is_empty"/>
    <testcase time="0.0379999999999967" classname="empty_report" name="tlg_functions_return_null_reports_when_domain_table_is_empty"/>
    <testcase time="0.0700000000000003" classname="empty_report" name="tlg_functions_return_null_reports_when_domain_table_is_empty"/>
    <testcase time="0.0489999999999995" classname="empty_report" name="tlg_functions_return_null_reports_when_domain_table_is_empty"/>
    <testcase time="0.0490000000000066" classname="empty_report" name="tlg_functions_return_null_reports_when_domain_table_is_empty"/>
    <testcase time="0.0159999999999982" classname="empty_report" name="tlg_functions_return_null_reports_when_domain_table_is_empty">
      <error type="error" message="Error in `test_check(pkg_name, reporter = reporter)`: 2 assertions failed: ('test-empty_report.R:74:3')">Error in `test_check(pkg_name, reporter = reporter)`: 2 assertions failed:
 * Variable 'adam_db$adlb$AVAL': Must have length &gt;= 1, but has length
 * 0.
 * Variable 'adam_db$adlb$CHG': Must have length &gt;= 1, but has length
 * 0.
Backtrace:
 1. chevron::run(lbt01, dat_empty)
      at test-empty_report.R:74:2
 2. chevron::run(lbt01, dat_empty)
 4. chevron (local) `&lt;fn&gt;`(adam_db = `&lt;named list&gt;`)
 5. chevron::assert_valid_variable(...)
 6. checkmate::reportAssertions(collection)</error>
    </testcase>
  </testsuite>
  <testsuite name="ext01" timestamp="2023-05-16T08:32:02Z" hostname="3670ef3e2e6a" tests="5" skipped="4" failures="0" errors="0" time="1.503">
    <testcase time="0.382999999999996" classname="ext01" name="ext01_functions_with_default_argument_value_return_expected_result_with_test_data">
      <skipped message="Reason: On CRAN ('test-ext01.R:7:3')"/>
    </testcase>
    <testcase time="0.370000000000005" classname="ext01" name="ext01_functions_with_categorical_data_return_expected_result_with_test_data">
      <skipped message="Reason: On CRAN ('test-ext01.R:15:3')"/>
    </testcase>
    <testcase time="0.167999999999999" classname="ext01" name="ext01_works"/>
    <testcase time="0.204999999999998" classname="ext01" name="ext01_works">
      <skipped message="Reason: On CRAN ('test-ext01.R:23:3')"/>
    </testcase>
    <testcase time="0.377000000000002" classname="ext01" name="ext01_works_for_selected_parameters_and_categorical_variables">
      <skipped message="Reason: On CRAN ('test-ext01.R:36:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="kmg01" timestamp="2023-05-16T08:32:03Z" hostname="3670ef3e2e6a" tests="6" skipped="0" failures="0" errors="0" time="1.854">
    <testcase time="0.0330000000000013" classname="kmg01" name="kmg01_works_as_expected"/>
    <testcase time="0.412999999999997" classname="kmg01" name="kmg01_works_as_expected"/>
    <testcase time="0.402000000000001" classname="kmg01" name="kmg01_works_as_expected_with_custom_color_set"/>
    <testcase time="0.328000000000003" classname="kmg01" name="kmg01_works_as_expected_with_custom_color_set"/>
    <testcase time="0.350999999999999" classname="kmg01" name="kmg01_works_if_change_pvalue_ties_and_conf_level"/>
    <testcase time="0.326999999999998" classname="kmg01" name="kmg01_works_if_change_annotation_position"/>
  </testsuite>
  <testsuite name="lbt01" timestamp="2023-05-16T08:32:05Z" hostname="3670ef3e2e6a" tests="3" skipped="2" failures="0" errors="0" time="6.193">
    <testcase time="4.44600000000001" classname="lbt01" name="lbt01_functions_with_default_argument_value_return_expected_result_with_test_data">
      <skipped message="Reason: On CRAN ('test-lbt01.R:7:3')"/>
    </testcase>
    <testcase time="1.438" classname="lbt01" name="lbt01_can_handle_n_0_and_outputs_NE_instead_of_infs_and_NAs"/>
    <testcase time="0.308999999999997" classname="lbt01" name="lbt01_can_handle_n_0_and_outputs_NE_instead_of_infs_and_NAs">
      <skipped message="Reason: On CRAN ('test-lbt01.R:21:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="lbt04" timestamp="2023-05-16T08:32:11Z" hostname="3670ef3e2e6a" tests="4" skipped="0" failures="0" errors="3" time="0.248">
    <testcase time="0.0309999999999917" classname="lbt04" name="lbt04_functions_with_default_argument_value_return_expected_result_with_test_data">
      <error type="error" message="Error in `assert_colnames(df, vars, null_ok = TRUE)`: Variable(s) not a column name of df: ('test-lbt04.R:5:3')">Error in `assert_colnames(df, vars, null_ok = TRUE)`: Variable(s) not a column name of df:
 AVALCAT1
 ANRIND
 [available columns are: STUDYID, USUBJID, SUBJID, SITEID, AGE, AGEU, SEX, RACE, ETHNIC, COUNTRY, DTHFL, INVID, INVNAM, ARM, ARMCD, ACTARM, ACTARMCD, TRT01P, TRT01A, TRT02P, TRT02A, REGION1, STRATA1, STRATA2, BMRKR1, BMRKR2, ITTFL, SAFFL, BMEASIFL, BEP01FL, AEWITHFL, RANDDT, TRTSDTM, TRTEDTM, TRT01SDTM, TRT01EDTM, TRT02SDTM, TRT02EDTM, AP01SDTM, AP01EDTM, AP02SDTM, AP02EDTM, EOSSTT, EOTSTT, EOSDT, EOSDY, DCSREAS, DTHDT, DTHCAUS, DTHCAT, LDDTHELD, LDDTHGR1, LSTALVDT, DTHADY, ADTHAUT, study_duration_secs, AAGE, AGEGR1, BBMISI, BBMRKR1, BECOG, BHGHTSI, BWGHTSI, ANL01FL]
Backtrace:
 1. chevron::lbt04_main(pre_data)
      at test-lbt04.R:5:2
 2. chevron::assert_valid_variable(...)
 3. chevron::assert_colnames(df, vars, null_ok = TRUE)</error>
    </testcase>
    <testcase time="0.085000000000008" classname="lbt04" name="lbt04_can_handle_all_NA_values">
      <error type="error" message="Error in `assert_colnames(df, vars, null_ok = TRUE)`: Variable(s) not a column name of df: ('test-lbt04.R:19:3')">Error in `assert_colnames(df, vars, null_ok = TRUE)`: Variable(s) not a column name of df:
 AVALCAT1
 ANRIND
 [available columns are: STUDYID, USUBJID, SUBJID, SITEID, AGE, AGEU, SEX, RACE, ETHNIC, COUNTRY, DTHFL, INVID, INVNAM, ARM, ARMCD, ACTARM, ACTARMCD, TRT01P, TRT01A, TRT02P, TRT02A, REGION1, STRATA1, STRATA2, BMRKR1, BMRKR2, ITTFL, SAFFL, BMEASIFL, BEP01FL, AEWITHFL, RANDDT, TRTSDTM, TRTEDTM, TRT01SDTM, TRT01EDTM, TRT02SDTM, TRT02EDTM, AP01SDTM, AP01EDTM, AP02SDTM, AP02EDTM, EOSSTT, EOTSTT, EOSDT, EOSDY, DCSREAS, DTHDT, DTHCAUS, DTHCAT, LDDTHELD, LDDTHGR1, LSTALVDT, DTHADY, ADTHAUT, study_duration_secs, AAGE, AGEGR1, BBMISI, BBMRKR1, BECOG, BHGHTSI, BWGHTSI, ANL01FL]
Backtrace:
  1. testthat::expect_silent(run(lbt04, proc_data))
       at test-lbt04.R:19:2
 10. chevron::run(lbt04, proc_data)
 12. chevron (local) `&lt;fn&gt;`(adam_db = `&lt;named list&gt;`)
 13. chevron::assert_valid_variable(...)
 14. chevron::assert_colnames(df, vars, null_ok = TRUE)</error>
    </testcase>
    <testcase time="0.0649999999999977" classname="lbt04" name="lbt04_can_handle_some_NA_values">
      <error type="error" message="Error in `assert_colnames(df, vars, null_ok = TRUE)`: Variable(s) not a column name of df: ('test-lbt04.R:27:3')">Error in `assert_colnames(df, vars, null_ok = TRUE)`: Variable(s) not a column name of df:
 AVALCAT1
 ANRIND
 [available columns are: STUDYID, USUBJID, SUBJID, SITEID, AGE, AGEU, SEX, RACE, ETHNIC, COUNTRY, DTHFL, INVID, INVNAM, ARM, ARMCD, ACTARM, ACTARMCD, TRT01P, TRT01A, TRT02P, TRT02A, REGION1, STRATA1, STRATA2, BMRKR1, BMRKR2, ITTFL, SAFFL, BMEASIFL, BEP01FL, AEWITHFL, RANDDT, TRTSDTM, TRTEDTM, TRT01SDTM, TRT01EDTM, TRT02SDTM, TRT02EDTM, AP01SDTM, AP01EDTM, AP02SDTM, AP02EDTM, EOSSTT, EOTSTT, EOSDT, EOSDY, DCSREAS, DTHDT, DTHCAUS, DTHCAT, LDDTHELD, LDDTHGR1, LSTALVDT, DTHADY, ADTHAUT, study_duration_secs, AAGE, AGEGR1, BBMISI, BBMRKR1, BECOG, BHGHTSI, BWGHTSI, ANL01FL]
Backtrace:
  1. testthat::expect_silent(run(lbt04, proc_data))
       at test-lbt04.R:27:2
 10. chevron::run(lbt04, proc_data)
 12. chevron (local) `&lt;fn&gt;`(adam_db = `&lt;named list&gt;`)
 13. chevron::assert_valid_variable(...)
 14. chevron::assert_colnames(df, vars, null_ok = TRUE)</error>
    </testcase>
    <testcase time="0.0669999999999931" classname="lbt04" name="lbt04_fails_on_incomlete_date"/>
  </testsuite>
  <testsuite name="lbt05" timestamp="2023-05-16T08:32:11Z" hostname="3670ef3e2e6a" tests="5" skipped="2" failures="0" errors="0" time="2.248">
    <testcase time="0.894000000000005" classname="lbt05" name="lbt05_functions_with_default_argument_value_return_expected_result_with_test_data">
      <skipped message="Reason: On CRAN ('test-lbt05.R:7:3')"/>
    </testcase>
    <testcase time="0.430000000000007" classname="lbt05" name="lbt05_give_all_0_count_if_ANRIND_are_all_missing"/>
    <testcase time="0.424999999999997" classname="lbt05" name="lbt05_can_handle_some_NA_values"/>
    <testcase time="0.427999999999997" classname="lbt05" name="lbt05_can_handle_some_NA_values">
      <skipped message="Reason: On CRAN ('test-lbt05.R:33:3')"/>
    </testcase>
    <testcase time="0.070999999999998" classname="lbt05" name="lbt05_fails_on_incomlete_date"/>
  </testsuite>
  <testsuite name="lbt07" timestamp="2023-05-16T08:32:14Z" hostname="3670ef3e2e6a" tests="4" skipped="1" failures="0" errors="1" time="2.118">
    <testcase time="1.34999999999999" classname="lbt07" name="lbt07_functions_with_default_argument_value_return_expected_result_with_test_data">
      <skipped message="Reason: On CRAN ('test-lbt07.R:7:3')"/>
    </testcase>
    <testcase time="0.570000000000007" classname="lbt07" name="lbt07_can_handle_some_NA_values"/>
    <testcase time="0.137999999999991" classname="lbt07" name="lbt07_can_handle_some_NA_values">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-lbt07.R:22:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.0600000000000023" classname="lbt07" name="lbt07_fails_on_incomlete_data"/>
  </testsuite>
  <testsuite name="lbt14" timestamp="2023-05-16T08:32:16Z" hostname="3670ef3e2e6a" tests="18" skipped="0" failures="0" errors="12" time="22.11">
    <testcase time="1.81" classname="lbt14" name="lbt14_functions_with_default_argument_value_return_expected_result_with_test_data">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-lbt14.R:7:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="1.908" classname="lbt14" name="lbt14_functions_with_default_argument_value_return_expected_result_with_test_data_when_direction_high">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-lbt14.R:14:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="1.357" classname="lbt14" name="lbt14_can_handle_all_NA_values"/>
    <testcase time="0.0669999999999931" classname="lbt14" name="lbt14_can_handle_all_NA_values">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-lbt14.R:27:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="1.66300000000001" classname="lbt14" name="lbt14_can_handle_some_NA_values"/>
    <testcase time="0.312999999999988" classname="lbt14" name="lbt14_can_handle_some_NA_values">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-lbt14.R:46:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="4.795" classname="lbt14" name="lbt14_can_accept_different_gr_missing">
      <error type="error" message="`cat(export_as_txt(res1, lpp = 100))` threw an unexpected error. ('test-lbt14.R:54:3')">`cat(export_as_txt(res1, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.309000000000012" classname="lbt14" name="lbt14_can_accept_different_gr_missing">
      <error type="error" message="`cat(export_as_txt(res2, lpp = 100))` threw an unexpected error. ('test-lbt14.R:55:3')">`cat(export_as_txt(res2, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.287999999999997" classname="lbt14" name="lbt14_can_accept_different_gr_missing">
      <error type="error" message="`cat(export_as_txt(res3, lpp = 100))` threw an unexpected error. ('test-lbt14.R:56:3')">`cat(export_as_txt(res3, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.078000000000003" classname="lbt14" name="lbt14_fails_on_incomlete_data"/>
    <testcase time="1.39" classname="lbt14" name="lbt14_can_handle_all_NA_values_with_direction_high"/>
    <testcase time="0.0569999999999879" classname="lbt14" name="lbt14_can_handle_all_NA_values_with_direction_high">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-lbt14.R:79:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="1.79000000000001" classname="lbt14" name="lbt14_can_handle_some_NA_values_with_direction_high"/>
    <testcase time="0.376999999999995" classname="lbt14" name="lbt14_can_handle_some_NA_values_with_direction_high">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-lbt14.R:98:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="5.15900000000001" classname="lbt14" name="lbt14_can_accept_different_gr_missing_with_direction_high">
      <error type="error" message="`cat(export_as_txt(res1, lpp = 100))` threw an unexpected error. ('test-lbt14.R:106:3')">`cat(export_as_txt(res1, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.332999999999998" classname="lbt14" name="lbt14_can_accept_different_gr_missing_with_direction_high">
      <error type="error" message="`cat(export_as_txt(res2, lpp = 100))` threw an unexpected error. ('test-lbt14.R:107:3')">`cat(export_as_txt(res2, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.335999999999999" classname="lbt14" name="lbt14_can_accept_different_gr_missing_with_direction_high">
      <error type="error" message="`cat(export_as_txt(res3, lpp = 100))` threw an unexpected error. ('test-lbt14.R:108:3')">`cat(export_as_txt(res3, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.0799999999999983" classname="lbt14" name="lbt14_fails_on_incomlete_data"/>
  </testsuite>
  <testsuite name="mht01" timestamp="2023-05-16T08:32:38Z" hostname="3670ef3e2e6a" tests="3" skipped="0" failures="0" errors="3" time="1.521">
    <testcase time="0.689999999999998" classname="mht01" name="mht01_1_functions_with_default_argument_value_return_expected_result_with_test_data">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-mht01.R:7:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.415000000000006" classname="mht01" name="mht01_works">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-mht01.R:15:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.415999999999997" classname="mht01" name="mht01_works_on_NULL_in_lbl_mhbodsys_or_lbl_mhdecod">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-mht01.R:21:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
  </testsuite>
  <testsuite name="mng01" timestamp="2023-05-16T08:32:39Z" hostname="3670ef3e2e6a" tests="8" skipped="4" failures="0" errors="0" time="5.52">
    <testcase time="1.18900000000001" classname="mng01" name="mng01_works_as_expected"/>
    <testcase time="0.185999999999993" classname="mng01" name="mng01_works_as_expected">
      <skipped message="Reason: On CRAN ('test-mng01.R:6:3')"/>
    </testcase>
    <testcase time="1.17400000000001" classname="mng01" name="mng01_works_as_expected_with_custom_color_set"/>
    <testcase time="0.180999999999997" classname="mng01" name="mng01_works_as_expected_with_custom_color_set">
      <skipped message="Reason: On CRAN ('test-mng01.R:20:3')"/>
    </testcase>
    <testcase time="1.20099999999999" classname="mng01" name="mng01_works_if_show_v_grid_show_h_grid_is_TRUE"/>
    <testcase time="0.189000000000007" classname="mng01" name="mng01_works_if_show_v_grid_show_h_grid_is_TRUE">
      <skipped message="Reason: On CRAN ('test-mng01.R:32:3')"/>
    </testcase>
    <testcase time="1.20999999999999" classname="mng01" name="mng01_works_with_combination_of_x_variables"/>
    <testcase time="0.189999999999998" classname="mng01" name="mng01_works_with_combination_of_x_variables">
      <skipped message="Reason: On CRAN ('test-mng01.R:46:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="pdt01" timestamp="2023-05-16T08:32:45Z" hostname="3670ef3e2e6a" tests="5" skipped="0" failures="0" errors="3" time="1.016">
    <testcase time="0.400000000000006" classname="pdt01" name="pdt01_function_with_default_argument_value_return_expected_result_with_test_data">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-pdt01.R:7:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.128" classname="pdt01" name="pdt01_can_handle_all_NA_values"/>
    <testcase time="0.0420000000000016" classname="pdt01" name="pdt01_can_handle_all_NA_values">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-pdt01.R:21:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.319999999999993" classname="pdt01" name="pdt01_can_handle_some_NA_values"/>
    <testcase time="0.126000000000005" classname="pdt01" name="pdt01_can_handle_some_NA_values">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-pdt01.R:36:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
  </testsuite>
  <testsuite name="pdt02" timestamp="2023-05-16T08:32:46Z" hostname="3670ef3e2e6a" tests="5" skipped="0" failures="0" errors="3" time="0.572">
    <testcase time="0.180000000000007" classname="pdt02" name="pdt02_function_with_default_argument_value_return_expected_result_with_test_data">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100, colwidths = c(40, 10, 10, 10)))` threw an unexpected error. ('test-pdt02.R:7:3')">`cat(export_as_txt(res, lpp = 100, colwidths = c(40, 10, 10, 10)))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.138999999999996" classname="pdt02" name="pdt02_can_handle_all_NA_values"/>
    <testcase time="0.0189999999999912" classname="pdt02" name="pdt02_can_handle_all_NA_values">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100, colwidths = c(40, 10, 10, 10)))` threw an unexpected error. ('test-pdt02.R:21:3')">`cat(export_as_txt(res, lpp = 100, colwidths = c(40, 10, 10, 10)))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.215000000000003" classname="pdt02" name="pdt02_can_handle_some_NA_values"/>
    <testcase time="0.0190000000000055" classname="pdt02" name="pdt02_can_handle_some_NA_values">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100, colwidths = c(40, 10, 10, 10)))` threw an unexpected error. ('test-pdt02.R:36:3')">`cat(export_as_txt(res, lpp = 100, colwidths = c(40, 10, 10, 10)))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
  </testsuite>
  <testsuite name="rmpt01" timestamp="2023-05-16T08:32:46Z" hostname="3670ef3e2e6a" tests="11" skipped="0" failures="0" errors="5" time="0.964">
    <testcase time="0.134999999999991" classname="rmpt01" name="rmpt01_function_with_default_argument_value_return_expected_result_with_test_data">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-rmpt01.R:7:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.102000000000004" classname="rmpt01" name="rmpt01_can_handle_NA_values"/>
    <testcase time="0.039999999999992" classname="rmpt01" name="rmpt01_can_handle_NA_values">
      <error type="error" message="`cat(export_as_txt(res1, lpp = 100))` threw an unexpected error. ('test-rmpt01.R:17:3')">`cat(export_as_txt(res1, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.158000000000001" classname="rmpt01" name="rmpt01_can_handle_NA_values"/>
    <testcase time="0.0529999999999973" classname="rmpt01" name="rmpt01_can_handle_NA_values">
      <error type="error" message="`cat(export_as_txt(res2, lpp = 100))` threw an unexpected error. ('test-rmpt01.R:20:3')">`cat(export_as_txt(res2, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.105000000000004" classname="rmpt01" name="rmpt01_can_handle_some_NA_values"/>
    <testcase time="0.0379999999999967" classname="rmpt01" name="rmpt01_can_handle_some_NA_values">
      <error type="error" message="`cat(export_as_txt(res1, lpp = 100))` threw an unexpected error. ('test-rmpt01.R:31:3')">`cat(export_as_txt(res1, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.173999999999992" classname="rmpt01" name="rmpt01_can_handle_some_NA_values"/>
    <testcase time="0.0530000000000115" classname="rmpt01" name="rmpt01_can_handle_some_NA_values">
      <error type="error" message="`cat(export_as_txt(res2, lpp = 100))` threw an unexpected error. ('test-rmpt01.R:34:3')">`cat(export_as_txt(res2, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.0519999999999925" classname="rmpt01" name="rmpt01_fails_on_incomlete_data"/>
    <testcase time="0.054000000000002" classname="rmpt01" name="rmpt01_fails_on_incomlete_data"/>
  </testsuite>
  <testsuite name="rspt01" timestamp="2023-05-16T08:32:47Z" hostname="3670ef3e2e6a" tests="27" skipped="0" failures="0" errors="13" time="5.713">
    <testcase time="0.0210000000000008" classname="rspt01" name="rspt01_works_as_expected"/>
    <testcase time="0.417999999999992" classname="rspt01" name="rspt01_works_as_expected"/>
    <testcase time="0.0740000000000123" classname="rspt01" name="rspt01_works_as_expected">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-rspt01.R:5:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.355999999999995" classname="rspt01" name="rspt01_works_as_expected_for_stratified_and_unstratified_analysis"/>
    <testcase time="0.0799999999999983" classname="rspt01" name="rspt01_works_as_expected_for_stratified_and_unstratified_analysis">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-rspt01.R:17:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.397999999999996" classname="rspt01" name="rspt01_works_as_expected_for_stratified_and_unstratified_analysis"/>
    <testcase time="0.100999999999999" classname="rspt01" name="rspt01_works_as_expected_for_stratified_and_unstratified_analysis">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-rspt01.R:25:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.285000000000011" classname="rspt01" name="rspt01_works_as_expected_for_unstratified_analysis_only"/>
    <testcase time="0.0819999999999936" classname="rspt01" name="rspt01_works_as_expected_for_unstratified_analysis_only">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-rspt01.R:36:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.313000000000002" classname="rspt01" name="rspt01_works_as_expected_for_unstratified_analysis_only"/>
    <testcase time="0.0849999999999937" classname="rspt01" name="rspt01_works_as_expected_for_unstratified_analysis_only">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-rspt01.R:43:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.292000000000002" classname="rspt01" name="rspt01_works_as_expected_for_stratified_analysis_only"/>
    <testcase time="0.0700000000000074" classname="rspt01" name="rspt01_works_as_expected_for_stratified_analysis_only">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-rspt01.R:55:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.325000000000003" classname="rspt01" name="rspt01_works_as_expected_for_stratified_analysis_only"/>
    <testcase time="0.0729999999999933" classname="rspt01" name="rspt01_works_as_expected_for_stratified_analysis_only">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-rspt01.R:63:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.326000000000008" classname="rspt01" name="rspt01_works_if_change_reference_group"/>
    <testcase time="0.0849999999999937" classname="rspt01" name="rspt01_works_if_change_reference_group">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-rspt01.R:74:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.403999999999996" classname="rspt01" name="rspt01_works_if_change_reference_group"/>
    <testcase time="0.0900000000000034" classname="rspt01" name="rspt01_works_if_change_reference_group">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-rspt01.R:83:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.350999999999999" classname="rspt01" name="rspt01_works_if_change_statistic_methods"/>
    <testcase time="0.0739999999999981" classname="rspt01" name="rspt01_works_if_change_statistic_methods">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-rspt01.R:97:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.403999999999996" classname="rspt01" name="rspt01_works_if_change_statistic_methods"/>
    <testcase time="0.0990000000000038" classname="rspt01" name="rspt01_works_if_change_statistic_methods">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-rspt01.R:111:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.317999999999998" classname="rspt01" name="rspt01_works_if_change_confidence_interval"/>
    <testcase time="0.0870000000000033" classname="rspt01" name="rspt01_works_if_change_confidence_interval">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-rspt01.R:123:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.406000000000006" classname="rspt01" name="rspt01_works_if_change_confidence_interval"/>
    <testcase time="0.0959999999999894" classname="rspt01" name="rspt01_works_if_change_confidence_interval">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-rspt01.R:132:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
  </testsuite>
  <testsuite name="utils" timestamp="2023-05-16T08:32:53Z" hostname="3670ef3e2e6a" tests="25" skipped="0" failures="0" errors="0" time="0.148">
    <testcase time="0.0190000000000055" classname="utils" name="h_format_dec_works_as_exected"/>
    <testcase time="0.00400000000000489" classname="utils" name="h_format_dec_works_as_exected"/>
    <testcase time="0.000999999999990564" classname="utils" name="h_format_dec_works_as_exected"/>
    <testcase time="0.00400000000000489" classname="utils" name="h_format_dec_works_as_exected"/>
    <testcase time="0.00199999999999534" classname="utils" name="h_format_dec_works_as_exected"/>
    <testcase time="0.00400000000000489" classname="utils" name="h_format_dec_works_as_exected"/>
    <testcase time="0.00199999999999534" classname="utils" name="h_format_dec_works_as_exected"/>
    <testcase time="0.00400000000000489" classname="utils" name="h_format_dec_works_as_exected"/>
    <testcase time="0.00199999999999534" classname="utils" name="h_format_dec_works_as_exected"/>
    <testcase time="0.00300000000000011" classname="utils" name="h_format_dec_works_as_exected"/>
    <testcase time="0.00100000000000477" classname="utils" name="h_format_dec_works_as_exected"/>
    <testcase time="0.00399999999999068" classname="utils" name="h_format_dec_works_as_exected"/>
    <testcase time="0.007000000000005" classname="utils" name="h_format_dec_works_as_expected_with_more_than_one_value"/>
    <testcase time="0.00400000000000489" classname="utils" name="h_format_dec_works_as_expected_with_more_than_one_value"/>
    <testcase time="0.00699999999999079" classname="utils" name="h_format_dec_works_returns_null_with_NA_format"/>
    <testcase time="0.007000000000005" classname="utils" name="h_format_dec_works_as_expected_with_NA_digits"/>
    <testcase time="0.007000000000005" classname="utils" name="h_format_dec_works_as_expected_with_NA_digits"/>
    <testcase time="0.00699999999999079" classname="utils" name="fuse_sequentially_works"/>
    <testcase time="0.0139999999999958" classname="utils" name="fuse_sequentially_works"/>
    <testcase time="0.007000000000005" classname="utils" name="grob_list_works"/>
    <testcase time="0.00199999999999534" classname="utils" name="grob_list_works"/>
    <testcase time="0.00500000000000966" classname="utils" name="grob_list_works"/>
    <testcase time="0.00499999999999545" classname="utils" name="grob_list_works"/>
    <testcase time="0.0180000000000007" classname="utils" name="ifneeded_split_row_works_as_expected"/>
    <testcase time="0.00799999999999557" classname="utils" name="ifneeded_split_row_works_as_expected"/>
  </testsuite>
  <testsuite name="vst01" timestamp="2023-05-16T08:32:53Z" hostname="3670ef3e2e6a" tests="3" skipped="0" failures="0" errors="2" time="11.707">
    <testcase time="5.75500000000001" classname="vst01" name="vst01_functions_with_default_argument_value_return_expected_result_with_test_data">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-vst01.R:7:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="5.13" classname="vst01" name="run_vst01_works_as_expected"/>
    <testcase time="0.822000000000003" classname="vst01" name="run_vst01_works_as_expected">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-vst01.R:14:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
  </testsuite>
  <testsuite name="vst02" timestamp="2023-05-16T08:33:05Z" hostname="3670ef3e2e6a" tests="2" skipped="0" failures="0" errors="2" time="0.713">
    <testcase time="0.358999999999995" classname="vst02" name="vst02_functions_with_default_argument_value_return_expected_result_with_test_data">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-vst02.R:7:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
    <testcase time="0.353999999999999" classname="vst02" name="vst02_functions_return_expected_result_with_test_data_when_excluding_subject_with_baseline_abnormality">
      <error type="error" message="`cat(export_as_txt(res, lpp = 100))` threw an unexpected error. ('test-vst02.R:14:3')">`cat(export_as_txt(res, lpp = 100))` threw an unexpected error.
Message: too many open devices
Class:   simpleError/error/condition</error>
    </testcase>
  </testsuite>
</testsuites>
